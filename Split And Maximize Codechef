#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
#define ll long long
#define hello() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define nl "\n"
#define yes cout<<"YES"<<nl
#define no cout<<"NO"<<nl
#define ss second
#define ff first
#define all(v) v.begin(),v.end()
#define eb emplace_back
#define sz(x) (int)(x).size()
#define pb push_back
#define mod 1000000007
#define mem(a,x) memset(a,x,sizeof(a))
int bit(ll a,int i){if(a&(1LL<<i)) return 1;return 0;}
template <typename num_t>
using os = tree<num_t, null_type, less_equal<num_t>, rb_tree_tag, tree_order_statistics_node_update>;
//os.order_of_key(x) returs number of elements strictly smaller than x;
//*(os.find_by_order(x)) returns which elemnt is in position x;simply work as ar[x]
ll isqrt (ll x){ll ans = 0;for (ll k = 1LL << 30; k != 0; k /= 2){if ((ans + k) * (ans + k) <= x) {ans += k;}}return ans;}
ll bin(ll n,ll pow){ll result=1;while(pow){if(pow&1){result=(result * n);}n=(n*n);pow>>=1;}return result;}
const int N=2e5+12;

void solve(){
    ll n;cin>>n;
    vector<ll>v(n),cnt(61,0);
    ll ans=0;
    for(int i=0;i<n;i++){
        cin>>v[i];ans^=v[i];
        for(int j=0;j<60;j++){
            if(bit(v[i],j)){
              cnt[j]++;
            }
        }
    }
    ll ok=0;
    for(int i=59;i>0;i--){
        if(cnt[i]>0 && cnt[i]%2==0){
            ok=1;
        }
        if(ok)ans|=(1ll<<i);
    }

    cout<<ans<<nl;
}

int main()
{
     hello();
cout.precision(10); cout.setf(ios::fixed);

     int tc;
   cin>>tc;
   for(int j=1;j<=tc;j++){
    // cout<<"Case "<<j<<": ";
        solve();

    }
}
